plugins {
    id 'java-library'
    //id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"

}

repositories {
    mavenCentral()
}

def// allureVersion = "2.19.0",
        restAssuredVersion = "5.3.0",
        junitVersion = "5.9.3",
        assertJVersion = "3.26.0",
        slf4jVersion = "2.0.7"
/*
allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}
*/
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:6.10.1',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "com.fasterxml.jackson.core:jackson-databind:2.17.2",
            'com.fasterxml.jackson.core:jackson-core:2.17.2',

            'io.rest-assured:json-schema-validator:5.5.0',
            "org.apache.commons:commons-lang3:3.11",
            'org.aspectj:aspectjrt:1.9.20',
            'org.projectlombok:lombok:1.18.20',
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'com.github.javafaker:javafaker:1.0.2'
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
    outputs.upToDateWhen { false }


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}